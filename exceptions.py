class NO_TOKEN(Exception):
    """Обработка исключения отсутствия токена."""

    def __init__(self, token):
        """Конструктор класса исключения."""
        txt = f'''Отсутствует обязательная переменная окружения: {token}
                    Программа принудительно остановлена.'''
        super().__init__(txt)


class ANSWER_API(Exception):
    """Обработка исключения овета API."""

    def __init__(self):
        """Конструктор класса исключения."""
        txt = 'API домашки возвращает код, отличный от 200'
        super().__init__(txt)


class status_API(Exception):
    """Обработка исключения статуса API."""

    def __init__(self):
        """Конструктор класса исключения."""
        txt = 'Неожиданный статус домашней работы'
        super().__init__(txt)


class NO_HW_NAME(Exception):
    """Обработка исключения отсутствия имени ДЗ."""

    def __init__(self):
        """Конструктор класса исключения."""
        txt = 'Отсутсвует имя домашки'
        super().__init__(txt)


class check_API(Exception):
    """Обработка исключения ответа API."""

    def __init__(self):
        """Конструктор класса исключения."""
        txt = 'Ответ API не соответствует документации ЯП'
        super().__init__(txt)


class cant_sent_TG(Exception):
    """Обработка невозможности отправки TG."""

    def __init__(self):
        """Конструктор класса исключения."""
        txt = 'В этот раз не удалось отправить TG'
        super().__init__(txt)


class endpoint_NA(Exception):
    """Обработка исключения статуса API."""

    def __init__(self):
        """Конструктор класса исключения."""
        txt = 'Эндпоинт недоступен'
        super().__init__(txt)